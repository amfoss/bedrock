# Extension ref: https://github.com/compose-spec/compose-spec/blob/main/spec.md#extension
x-environment: &env
  env_file:
    - ./.env

services:
  reverse-proxy:
    container_name: traefik
    image: traefik:v3.3
    ports:
      - 443:443
    volumes:
      # To monitor docker events
      - /var/run/docker.sock:/var/run/docker.sock

      # Required configs and certificates
      - ./traefik.yml:/etc/traefik/traefik.yml
      # Dynamic config which supports hot reloading
      # See: https://doc.traefik.io/traefik/getting-started/configuration-overview/#the-dynamic-configuration
      - ./certs-traefik.yml:/etc/traefik/dynamic/certs-traefik.yml
      - /etc/ssl:/etc/ssl

  root:
    container_name: root
    image: ghcr.io/amfoss/root:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.root.tls=true
      - traefik.http.routers.root.entrypoints=web
      - traefik.http.routers.root.rule=Host(`root.${HOSTNAME}`)
      - traefik.http.services.root.loadbalancer.server.port=${ROOT_PORT}
    <<: *env # YAML merge

  amd:
    container_name: amd
    image: ghcr.io/amfoss/amd:latest
    restart: always
    <<: *env # YAML merge

  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    volumes:
      - db-vol:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 2s
      timeout: 30s
      retries: 5
      start_period: 30s
    <<: *env

volumes:
  db-vol:


